use EPrints;

use strict;

my $session = EPrints::Session->new();

# security?

my $content = "text/xml";
$session->send_http_header( content_type=>$content );

my @params = $session->param;
print STDERR "params [".Data::Dumper::Dumper(\@params)."]\n";
my $project = $session->param( "_project" );
my $given = $session->param( "_funder_name" );
my $id = $session->param( "_funder_id" );

print STDERR "got p[$project] n[$given] i[$id]\n";

my $database = $session->get_database;
my $dataset = $session->dataset( "eprint" );
my $main_project_field = $dataset->get_field( "projects" );
my $project_field = $dataset->get_field( "rioxx2_project_input_project" );
my $name_field = $dataset->get_field( "rioxx2_project_input_funder_name" );
my $id_field = $dataset->get_field( "rioxx2_project_input_funder_id" );

print STDERR "got fields n[$name_field] fn[$name_field] id[$id_field]\n";

my @fields = ($project_field->get_sql_names, $main_project_field->get_sql_names, );

my $Q_table = $database->quote_identifier($dataset->get_sql_table_name);
my $Q_p_table = $database->quote_identifier($dataset->get_sql_sub_table_name($main_project_field));
my $Q_name_table = $database->quote_identifier($dataset->get_sql_sub_table_name($project_field));
my $Q_eprintid = $database->quote_identifier( "eprintid" );
my $Q_pos = $database->quote_identifier( "pos" );
my $Q_num_matches = $database->quote_identifier( "num_matches" );
my $Q_eprint_status = $database->quote_identifier( "eprint_status" );

my $sql = "SELECT COUNT($Q_table.$Q_eprintid) ".$database->sql_AS." $Q_num_matches," .
	join(",", map { $database->quote_identifier($_) } @fields) .
	" FROM $Q_table" .
	" LEFT JOIN $Q_name_table" .
	" ON $Q_table.$Q_eprintid=$Q_name_table.$Q_eprintid" .
	" LEFT JOIN $Q_p_table" .
	" ON $Q_table.$Q_eprintid=$Q_p_table.$Q_eprintid" .
	" WHERE " .
	" $Q_table.$Q_eprint_status=".$database->quote_value( "inbox" );
if( EPrints::Utils::is_set( $project ) )
{
	$sql .= " AND ".$database->quote_identifier("rioxx2_project_input_project").$database->sql_LIKE().$database->quote_value(EPrints::Database::prep_like_value($project).'%');
}
$sql .= "GROUP BY ".join(",",map { $database->quote_identifier($_) } @fields) .
	" ORDER BY $Q_num_matches DESC," .
	$database->quote_identifier("rioxx2_project_input_project");

print STDERR $sql."\n";
my @rows;

my $sth = $session->get_database->prepare_select( $sql, 'limit' => 40 );
$session->get_database->execute( $sth , $sql );
while( my @row = $sth->fetchrow_array )
{
	my $cnt = shift @row;
	my $name = $name_field->value_from_sql_row( $session, \@row );
	my $id = $id_field->value_from_sql_row( $session, \@row );

	my $item = {};
	push @rows, $item;

	my $frag = $session->make_doc_fragment;

	$frag->appendChild( $name_field->render_single_value( $session, $name ) );
	if( EPrints::Utils::is_set( $id ) )
	{
		$frag->appendChild( $session->make_text( " " ) );
		$frag->appendChild( $id_field->render_single_value( $session, $id ) );
	}

	$frag->appendChild( $session->html_phrase( 'cgi/lookup/name:authored', count => $session->make_text( $cnt ) ) );

	$item->{xhtml} = $frag;
	$item->{values} = [
		"for:value:relative:_funder_name" => $name,
		"for:value:relative:_funder_id" => $id,
	];
}

$sth->finish();

my $ul = EPrints::Extras::render_lookup_list( $session, \@rows );

$session->send_http_header( content_type => "text/xml; charset=UTF-8" );

binmode(STDOUT,":utf8");
print <<END;
<?xml version="1.0" encoding="UTF-8" ?>

END
print EPrints::XML::to_string( $ul, "utf-8", 1 );

EPrints::XML::dispose( $ul );

$session->terminate;

